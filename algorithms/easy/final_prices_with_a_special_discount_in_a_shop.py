#
# The constraints are very low (N<=500) in this problem and it can be
# solved using brute force. However, a better way is to use a stack.
# First solution iterates the prices list from left to right, and the
# second solution iterates from right to left. The stack is monotonically
# increasing in both cases.
#
from typing import List

class Solution:
    def finalPrices(self, prices: List[int]) -> List[int]:
        res = prices[:]
        stack = list()
        for i in range(len(prices)):
            while stack and prices[stack[-1]] >= prices[i]:
                j = stack.pop()
                res[j] -= prices[i]
            stack.append(i)
        return res
    def finalPrices_1(self, prices: List[int]) -> List[int]:
        # Another stack solution - going from right to left
        res = prices[:]
        stack = list()
        for i in range(len(prices) - 1, -1, -1):
            while stack and prices[stack[-1]] > prices[i]:
                stack.pop()
            if stack:
                res[i] -= prices[stack[-1]]
            stack.append(i)
        return res

# Main section
for prices in [
                 [8,4,6,2,3],
                 [1,2,3,4,5],
                 [10,1,1,6],
                 [27,690,881,372,560,614,357,449,551,502,702,632,662,254,924,125,140,529,578,680,590,468,740,594,783,10,51,676,73,146,170,421,142,969,806,135,765,779,262,156,246,6,519,906,346,106,302,624,71,393,33,288,132,358,319,221,175,283,439,867,907,511,48,72,863,860,287,721,854,435,755,359,170,487,196,582,954,892,422,800,763,784,70,423,663,972,886,305,852,370,502,273,671,755,383,573,340,515,508,471,118,189,346,701,392,678,705,644,498,137,81,610,238,885,554,840,276,922,800,22,236,820,896,211,37,95,377,117,251,405,929,646,957,711,4,771,546,234,279,99,739,591,927,209,957,891,147,748,19,872,419,149,125,259,954,848,822,802,435,60,570,166,127,808,166,73,105,928,774,219,841,512,813,469,634,973,100,972,395,84,642,873,934,460,519,968,286,960,122,370,607,813,582,525,663,150,131,524,411,420,631,158,186,18,199,536,80,167,989,629,465,935,282,970,638,585,436,770,61,515,73,807,516,344,163,935,100,444,400,701,44,622,833,519,673,574,895,233,440,854,979,747,521,705,484,873,412,15,28,955,815,580,217,134,114,440,761,414,488,408,962,158,523,658,933,370,620,757,270,112,182,657,33,622,832,588,809,78,322,957,882,632,782,773,386,566,915,618,346,237,690,151,774,84,443,519,567,975,116,972,321,920,469,51,316,808,651,254,229,917,651,851,632,328,742,793,882,86,198,678,644,94,41,499,821,40,867,799,761,305,834,220,842,878,393,776,775,174,23,564,935,787,453,291,114,935,176,988,600,164,51,337,23,706,511,149,567,556,993,900,385,65,696,791,490,828,453,848,514,350,774,445,827,766,270,692,18,88,681,98,847,992,568,298,566,84,212,109,730,261,522,28,328,218,413,157,742,133,123,84,926,17,122,940,488,72,74,985,258,582,907,251,718,442,228,138,18,48,190,823,938,291,844,552,515,6,97,456,878,32,302,305,683,911,384,897,682,726,901,214,330,500,332,879,818,248,954,859,626,220,250,430,669,406,28,438,449,284,214,645,552,542,107,175,290,156,403,542,637,42,858,581,703,119,963,79,3,356,557,253,83,844,677,531,358,754,767,126,470,269,33,753,742,584,572,942,162,812,899,620],
              ]:
    print(f'prices = {prices}')
    sol = Solution()
    r = sol.finalPrices(prices)
    print(f'r  = {r}')
    r1 = sol.finalPrices_1(prices)
    print(f'r1 = {r1}')
    print(f'r == r1 is {r == r1}')
    print('===================')


