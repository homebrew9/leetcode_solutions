from typing import List
from functools import cache

class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        @cache
        def solve(i, amount):
            if amount == 0:
                return True
            if i >= N or amount < 0:
                return False
            return solve(i+1, amount - nums[i]) or solve(i+1, amount)
        
        N = len(nums)
        total = sum(nums)
        if total % 2 == 1:
            return False
        amount = total // 2
        return solve(0, amount)

# Main section
for nums in [
               [1,5,11,5],
               [1,2,3,5],
               [62,54,54,54,29,67,51,60,3,22,88,62,61,93,10,34,50,18,86,80,84,82,14,75,7,77,83,9,82,8,48,1,81,28,39,45,34,57,87,55,50,85,59,74,45,44,68,76,68,77,72,23,68,89,40,21,63,7,44,5,9,57,71,12,11,98,71,3,13,79,93,67,44,24,92,5,35,11,45,90,48,100,38,4,88,53,22,4,51,92,4,61,35,75,63,86,71,57,7,62,55,62,100,28,75,90,39,100,47,41,69,98,19,30,70,91,86,42,14,88,60,25,12,4,76,90,88,10,61,55,88,25,80,48,9,37,84,94,43,95,46,95,61,69,71,4,77,13,24,31,5,17,22,65,78,80,47,60,54,68,43,59,88,31,85,24,78,38,14,70,11,31,32,8,84,24,92,5,43,43,28,68,97,3,57,5,10,5,12,98,29,44,8,77,55,50,48,67,49,67],
               [70,95,52,84,36,62,62,92,17,98,73,91,78,46,3,56,68,55,22,81,50,85,44,4,1,47,28,24,83,16,88,56,83,38,68,60,63,32,49,21,85,19,68,71,40,48,19,95,38,74,13,62,64,16,81,23,5,4,1,84,25,93,41,54,65,10,52,65,27,56,66,66,97,68,23,53,37,77,84,77,59,71,97,99,73,36,23,75,43,43,75,45,5,19,96,81,35,94,16,31,52,58,31,22,87,78,87,30,47,1,84,44,80,27,33,56,22,79,40,15,43,95,59,42,65,22,4,69,5,73,13,52,66,44,53,63,56,78,43,12,57,11,77,10,94,15,43,50,44,64,10,86,55,8,16,91,47,70,53,69,52,96,1,28,89,77,90,55,14,48,97,74,20,75,13,26,96,74,15,79,5,57,46,88,65,81,10,36,16,68,77,94,12,59,46,13,25,90,9,95],
            ]:
    print(f'nums = {nums}')
    sol = Solution()
    r = sol.canPartition(nums)
    print(f'r = {r}')
    print('==================')


