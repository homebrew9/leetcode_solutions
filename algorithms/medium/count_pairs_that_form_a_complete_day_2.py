from typing import List

class Solution:
    def countCompleteDayPairs(self, hours: List[int]) -> int:
       arr = [0 for _ in range(24)]
       for h in hours:
           arr[h % 24] += 1
       res = 0
       for i in range(13):
           if i == 0 or i == 12:
               res += arr[i] * (arr[i] - 1) // 2
           else:
               res += arr[i] * arr[24 - i]
       return res

    #def countCompleteDayPairs(self, hours: List[int]) -> int:
    #    # Another way - using the hints as specified in the problem.
    #    # But I think the first solution is easier to understand.
    #    hsh = {x: 0 for x in range(24)}
    #    res = 0
    #    for j in range(len(hours)):
    #        res += hsh[(24 - hours[j] % 24) % 24]
    #        hsh[hours[j] % 24] += 1
    #    return res

# Main section
for hours in [
                [12,12,30,24,24],
                [72,48,24,3],
                [306,105,69,338,998,743,908,206,49,333,916,832,973,271,884,251,1000,758,680,979,122,707,739,105,401,213,426,111,821,770,805,794,844,554,238,666,564,367,10,39,738,79,468,847,876,391,131,835,403,361,353,637,986,204,134,655,240,919,327,850,934,612,356,924,438,804,532,949,350,156,610,207,908,413,22,231,88,918,258,817,66,115,329,171,570,373,972,898,634,590,956,13,697,222,157,400,347,38,584,122],
                [972,114,606,819,208,242,937,494,844,42,750,808,727,34,579,664,554,539,211,101,471,472,113,339,620,753,100,112,256,428,484,644,668,181,200,142,250,553,787,495,444,358,360,878,752,208,442,144,549,422,664,456,368,273,967,31,620,774,33,515,956,295,494,531,444,703,651,342,302,517,996,642,613,502,632,343,589,370,380,575,960,472,852,555,845,386,724,781,336,326,161,550,641,567,458,450,880,636,193,4,705,647,386,188,511,646,267,249,199,58,873,879,670,876,405,350,100,445,128,272,132,534,743,591,730,749,924,310,48,8,577,539,236,646,835,48,683,50,667,140,244,191,695,935,66,792,628,444,102,140,415,516,492,484,434,221,389,794,506,290,417,84,434,776,896,7,486,394,639,129,268,639,288,975,394,45,617,388,882,705,521,801,954,751,820,817,137,196,763,457,633,996,496,669,223,812,482,939,471,297,595,821,176,654,710,286,747,842,804,90,325,604,188,849,222,923,138,74,183,55,142,175,230,69,469,946,377,873,244,569,309,616,561,251,838,410,94,775,116,259,699,97,581,919,276,260,130,598,200,633,764,938,7,306,132,606,330,668,809,906,631,561,668,327,215,319,609,265,274,849,155,742,700,338,41,867,365,324,995,579,86,786,793,776,638,140,997,354,698,653,985,285,849,517,863,661,480,332,521,57,78,422,718,331,802,827,752,308,567,125,126,265,630,560,41,41,537,799,444,714,977,875,391,825,531,191,659,660,114,231,784,530,635,581,829,278,778,775,95,660,830,2,9,692,227,428,92,60,572,796,848,801,757,483,228,731,111,517,372,501,567,494,398,143,721,14,625,947,844,192,383,207,846,192,35,774,109,4,757,832,393,579,171,377,158,473,820,354,455,638,48,673,771,144,374,895,703,296,43,154,683,158,810,175,224,532,468,29,254,208,363,470,494,983,441,408,3,445,155,794,473,29,135,377,267,97,55,682,440,798,572,898,579,140,950,317,788,350,865,122,36,590,137,658,196,341,818,550,887,337,697,754,750,922,9,616,160,639,718,429,591,215,366,712,421,534,744,178,114,969,145,326,232,469,744,102,804,282,567,997,903,305,977,981,433,633,746,647,737,480,877,445,177,837,66,743,627,678,627,39,480,118,388,392,99,768,974,806,737,628,817,544,459,194,276,375,708,736,331,962,600,942,796,527,802,230,676,670,579,571,682,460,855,717,983,646,81,768,183,768,546,805,551,146,865,671,130,897,14,9,310,744,226,380,795,181,508,427,330,596,691,951,156,772,115,965,155,909,146,814,14,263,813,730,387,999,307,73,756,311,647,744,683,520,867,381,396,815,145,846,585,715,32,754,919,892,36,287,362,495,555,195,967,718,88,31,300,943,865,660,357,620,993,702,285,916,744,997,451,716,471,279,640,644,828,919,410,416,804,627,390,75,47,683,646,268,510,203,136,505,268,454,360,360,336,578,428,888,502,10,912,476,633,711,948,581,501,497,429,398,309,299,17,562,668,941,234,619,765,576,37,101,506,762,16,418,323,983,659,25,609,56,495,10,626,830,336,986,106,235,357,975,579,907,909,532,373,348,628,68,939,338,885,592,95,911,392,952,61,989,323,371,508,313,921,131,412,925,732,358,795,678,83,898,591,837,72,445,917,749,508,915,376,901,94,674,860,405,999,179,736,114,397,484,987,743,747,345,81,194,267,156,780,575,563,286,442,37,110,63,743,894,620,17,966,338,210,114,467,9,725,903,202,898,727,763,989,849,217,335,488,629,791,374,260,257,655,835,476,378,945,570,605,537,918,543,821,255,781,671,24,585,570,950,930,311,357,404,589,812,773,203,785,753,15,996,69,324,641,437,669,741,148,434,877,564,194,704,466,238,720,942,255,2,74,263,732,108,702,290,10,435,720,12,79,685,445,595,473,52,728,392,986,107,157,95,992,69,28,435,948,169,152,12,634,499,328,931,54,136,968,732,50,231,407,251,282,524,787,706,872,670,910,328,908,213,292,629,36,401,13,38,676,572,483,433,467,181,43,115,737,557,504,4,192,636,28,203,637,432,651,163,594,710,823,562,73,668,714,70,613,531,594,269,281,245,298,393,865,666,421,686,70,62,529,822,860,643,571,374,261,538,594,91,267,769,689,181,808,485,637,685,504,614,550,98,648,422,340,251,611,307,730,649,701,853,896,678,947,810,492,451,314,255,94,199,925,116,895,58,262,360,891,631,670,89,136,558,85,317,710,391,551,795,481,600,387,86,649,443],
             ]:
    print(f'hours = {hours}')
    sol = Solution()
    r = sol.countCompleteDayPairs(hours)
    print(f'r = {r}')
    print('=================')


