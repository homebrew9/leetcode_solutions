from typing import List
import bisect

class Solution:
    def triangleNumber(self, nums: List[int]) -> int:
        N = len(nums)
        nums.sort()
        res = 0
        for i in range(1, N-1):
            if nums[i] == 0:
                continue
            j = i - 1
            while j >= 0:
                if nums[j] == 0:
                    break
                val = nums[j] + nums[i]
                k = bisect.bisect_left(nums, val)
                dist = k - i - 1
                if dist == 0:
                    break
                res += dist
                j -= 1
        return res

# Main section
for nums in [
               [2,2,3,4],
               [4,2,3,4],
               [1,2,3,4,4,5],
               [937,129,691,263,148,119,305,299,251,601,856,466,820,347,502,97,410,305,360,952,508,167,643,781,182,754,293,421,811,818,762,44,245,168,494,916,916,812,421,399,707,682,314,433,828,656,732,469,951,438,672,119,583,161,404,164,405,986,485,912,916,353,949,90,950,732,634,583,598,949,666,839,449,817,277,714,724,137,628,194,577,15,397,179,207,175,858,607,15,154,233,988,400,627,825,857,140,869,215,349,719,145,941,621,788,258,654,230,982,267,221,779,47,871,288,256,283,904,23,613,797,347,665,306,404,884,282,245,895,925,410,881,157,688,527,108,564,103,815,994,218,900,618,223,357,887,397,133,292,591,754,683,340,968,690,22,733,493,320,4,474,843,193,98,528,899,942,285,201,146,879,242,139,478,533,36,442,814,620,39,830,552,162,188,500,765,865,322,477,465,676,880,726,579,52,354,977,38,538,389,597,185,974,523,442,579,63,650,745,615,8,889,925,623,420,574,285,715,199,677,72,317,538,65,460,426,327,657,653,15,110,150,7,232,688,378,339,450,266,363,683,719,351,235,152,544,404,568,893,885,255,191,978,104,736,125,680,382,961,334,403,601,678,912,677,494,400,795,576,741,473,688,708,471,546,253,720,566,195,398,391,261,417,303,49,715,907,481,101,256,291,521,432,333,513,194,2,177,627,988,309,121,849,69,477,689,945,677,861,346,983,91,322,975,190,821,647,831,72,770,207,918,624,99,340,757,747,632,282,608,144,649,416,534,714,698,199,735,395,241,204,436,793,183,14,693,134,404,539,683,272,715,796,834,25,762,706,826,980,925,987,195,25,602,733,243,580,302,177,943,974,737,527,961,329,18,800,257,698,778,1000,81,11,97,932,433,351,335,769,245,202,416,888,53,995,762,91,431,466,106,322,85,993,504,131,825,749,955,935,471,992,647,883,283,642,429,381,123,643,196,890,211,631,987,772,150,81,966,70,442,167,618,664,160,999,507,448,776,626,751,703,952,365,578,227,607,811,432,508,175,409,683,807,328,235,568,784,365,100,338,454,533,241,519,90,208,651,31,232,643,868,781,638,394,797,35,226,138,513,313,905,470,508,397,94,342,499,419,589,283,630,349,928,148,456,831,294,335,808,372,28,550,627,881,27,157,846,800,768,684,771,912,486,34,588,95,116,916,501,699,162,943,702,618,739,65,710,174,141,934,850,584,381,716,248,106,958,400,659,36,39,873,542,506,469,749,629,462,383,787,975,70,765,238,210,375,320,968,486,516,87,663,109,928,710,17,302,699,528,713,369,320,886,416,779,857,610,780,622,117,12,953,847,559,44,546,30,829,172,161,47,188,148,902,662,770,35,234,221,150,267,256,623,357,808,812,852,382,706,130,825,977,327,80,0,377,383,471,472,259,596,696,531,892,199,609,240,971,221,60,385,91,678,219,841,812,352,315,880,764,678,183,617,960,736,994,913,182,657,215,643,622,902,258,325,626,270,633,571,822,753,422,391,318,76,411,902,743,810,185,320,935,578,393,362,887,888,465,721,879,460,414,910,211,359,547,799,55,444,464,356,294,608,201,709,783,167,832,140,201,980,106,279,56,350,555,406,305,780,535,262,893,771,917,632,684,978,200,223,448,739,741,792,560,513,974,167,625,980,336,855,654,996,754,11,259,960,88,31,599,105,885,233,411,470,214,115,754,27,68,727,753,657,118,715,149,720,479,438,122,873,245,218,492,587,195,318,568,451,53,891,834,638,907,753,280,901,985,628,913,613,930,663,815,803,80,569,763,946,586,714,875,429,10,281,89,780,444,242,970,143,462,141,141,117,217,172,166,158,446,554,459,773,746,168,190,384,260,268,181,814,675,536,482,773,284,597,303,612,440,175,585,308,95,651,722,811,457,286,879,841,833,343,326,581,754,314,248,142,831,115,715,40,326,574,338,251,705,829,442,777,927,862,493,484,671,637,747,926,954,213,426,704,561,516,158,381,597,723,221,392,476,71,783,419,159,94,107,191,8,659,583,24,95,217,539,294,781,491,201,741,722,561,362,898,507,493,434,13,694,118,788,871,453,315,942,269,208,261,680,47,352,58,987,33,507,937,226,958,820,707,312,440,375,480,625,375,771,265,162,379,954,977,742,938,765,254,254,730,581,664,244,48,840,509,430,420,466,278,504,256,403,233,356,203,210,765,102,938,525,202,736,503,407,238,28,436,555,589,228,689,521,889,526,404,191,282,621,235,639,348,208,786,831,673,202,124,560,403,670],
               [471,484,284,898,203,345,34,613,127,3,790,147,296,836,550,108,155,41,619,967,118,869,442,396,910,198,287,301,669,196,211,421,349,314,595,242,9,800,527,336,462,62,830,707,808,533,16,833,445,497,559,121,124,121,284,170,268,573,906,41,158,800,173,545,751,504,17,439,674,201,565,138,566,981,193,880,47,727,519,130,952,754,443,521,721,223,839,953,746,632,60,298,288,175,194,653,92,311,976,275,796,55,697,260,606,980,802,65,891,202,694,782,359,474,14,601,95,270,153,250,732,214,832,803,312,922,484,813,664,856,966,112,651,929,532,612,662,59,901,860,684,375,58,706,915,899,778,851,963,66,385,593,526,957,489,501,969,670,94,961,410,653,379,865,870,42,582,262,155,488,564,585,7,49,543,177,159,167,190,246,421,162,480,554,611,948,323,118,380,570,383,609,218,217,625,591,619,556,174,796,673,45,650,868,4,822,162,657,394,224,792,557,193,213,991,844,152,138,681,634,155,469,797,88,455,933,296,278,818,96,666,744,88,322,296,260,936,507,573,153,63,960,678,502,51,344,841,810,32,214,446,348,854,664,270,28,716,527,937,394,537,279,515,488,913,265,897,359,815,387,237,107,181,595,453,468,419,821,639,677,476,590,792,597,994,220,197,332,963,843,370,756,320,575,760,198,566,708,755,115,322,983,355,921,396,980,877,843,382,69,497,127,403,433,316,581,578,628,347,46,252,567,716,499,31,479,634,692,144,470,262,911,496,435,109,869,358,824,779,640,564,958,54,281,210,76,118,597,913,751,759,447,637,245,741,211,338,582,975,301,713,668,926,860,745,352,323,624,477,99,757,897,453,608,714,253,343,90,974,217,780,762,924,75,231,803,718,365,845,858,519,201,418,746,392,915,6,40,352,428,220,834,637,552,601,608,425,857,259,337,362,64,440,779,455,78,764,163,203,123,252,352,879,859,987,141,484,800,377,140,941,345,626,107,994,582,629,591,662,136,86,252,541,424,11,395,733,456,919,835,657,57,504,934,176,677,650,240,282,547,280,518,813,86,839,475,855,926,346,293,875,920,491,574,959,897,326,258,120,822,685,945,411,413,934,773,360,643,931,760,499,446,742,646,171,212,623,435,729,400,223,299,472,785,434,498,774,399,603,469,955,113,413,959,505,613,559,715,709,619,423,369,245,781,303,437,20,341,476,342,640,714,571,882,397,996,421,581,573,473,800,582,355,383,267,817,315,976,286,474,710,473,907,780,193,195,493,420,308,128,791,175,51,626,728,418,661,849,981,551,968,817,822,814,808,249,49,683,324,577,30,547,973,150,840,228,984,19,346,914,626,687,253,188,472,516,91,423,459,949,284,315,74,36,482,661,843,219,408,395,42,874,459,775,845,875,85,687,820,815,739,832,621,853,614,136,94,89,86,268,705,877,224,345,16,221,232,629,58,445,766,504,116,632,97,852,288,321,488,235,68,31,918,986,486,881,978,534,460,9,14,583,695,920,549,862,511,777,761,612,896,854,61,173,232,24,604,968,481,807,511,858,934,797,637,122,251,761,338,794,803,957,830,41,608,528,382,54,884,246,885,645,992,139,339,69,262,55,468,616,450,155,823,438,635,475,458,272,131,957,382,17,387,691,142,529,310,17,71,795,815,350,838,803,646,2,766,547,288,418,676,734,214,993,186,974,14,62,315,506,714,882,189,723,603,429,606,222,600,27,978,745,70,224,775,955,411,358,456,47,197,817,654,146,369,488,242,538,724,995,627,591,175,800,27,504,728,356,651,237,932,690,488,533,425,185,985,90,38,338,906,153,600,655,254,87,304,373,858,595,795,199,276,211,710,258,799,830,220,723,546,922,852,219,116,485,300,614,375,399,28,349,122,174,64,376,290,584,244,396,762,840,740,19,403,484,219,544,26,618,701,313,537,153,124,383,433,87,216,285,334,960,87,717,712,472,90,321,233,700,384,598,433,255,679,812,349,259,100,513,527,111,607,700,214,302,596,717,308,760,607,831,840,851,569,587,502,914,501,668,868,888,138,31,968,5,979,414,249,30,312,234,798,597,654,922,623,320,340,642,350,724,600,226,242,943,954,440,154,315,891,390,344,734,774,616,832,634,390,749,382,325,116,863,475,522,204,12,329,726,282,472,640,764,760,907,294,71,616,767,856,776,105,658,225,861,345,703,920,510,653,244,349,509,932,547,188,599,371,823,458,449,190,109,824,850,730,590,330,634,8,71,36,595,316,694,343,726,787,717],
            ]:
    print(f'nums = {nums}')
    sol = Solution()
    r = sol.triangleNumber(nums)
    print(f'r = {r}')
    print('=============')




