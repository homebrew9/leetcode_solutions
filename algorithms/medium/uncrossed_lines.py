# =============================================================================
# Check the problem: LCS (Longest Common Subsequence) and the following link.
# https://www.programiz.com/dsa/longest-common-subsequence
# Customized to return just the length. The original algo returns the LCS.
# Also check "Edit Distance" in lcode/practice/dynamic_programming folder.
# =============================================================================
from typing import List

class Solution:
    def maxUncrossedLines(self, nums1: List[int], nums2: List[int]) -> int:
        M = len(nums1) # columns
        N = len(nums2) # rows
        dp = [[None for _ in range(M+1)] for _ in range(N+1)]
        for c in range(M+1):
            dp[0][c] = 0
        for r in range(N+1):
            dp[r][0] = 0
        for r in range(1, N+1):
            for c in range(1, M+1):
                if nums1[c-1] == nums2[r-1]:
                    dp[r][c] = dp[r-1][c-1] + 1
                else:
                    dp[r][c] = max(dp[r-1][c], dp[r][c-1])
        return dp[N][M]

# Main section
for nums1, nums2 in [
                       ([1,4,2], [1,2,4]),
                       ([2,5,1,2,5], [10,5,2,1,5,2]),
                       ([1,3,7,1,7,5], [1,9,2,5,1]),
                       ([1899,1413,698,845,283,829,895,1583,1390,1091,104,757,113,1207,1823,1706,1117,1675,1889,535,1634,563,1695,1340,1973,379,328,666,1530,1771,1419,1426,286,1361,476,1002,498,215,1164,1118,7,98,1893,152,1789,1469,1211,619,1286,49,1949,855,1078,786,230,1869,1350,874,196,1673,1675,1531,76,1062,1526,28,1743,918,517,1037,359,1195,1664,1912,1206,787,1975,347,1642,57,790,1551,1643,1961,1970,722,1689,1714,189,1333,1459,2000,406,313,168,904,805,1744,395,1109,81,213,1601,1391,984,1846,1508,176,1065,1968,1845,329,1743,1447,670,547,1866,987,1247,1235,633,1783,1553,1637,638,1234,478,1804,539,29,359,1736,1717,1214,1497,1902,1855,1855,262,260,1276,532,1473,1475,1543,1513,930,1135,791,1275,694,1918,420,683,1210,1743,1819,970,1949,1962,1226,200,1188,749,467,446,1332,1744,311,1293,992,1078,1073,1565,1835,1414,1228,717,1338,107,747,1149,865,805,1050,962,1311,1684,401,1139,1734,124,1328,1254,1624,1799,1948,1082,288,887,1020,184,1613,399,507,1977,142,899,736,555,1290,1702,218,580,50,477,1046,1946,1239,586,1296,1194,1078,1181,1661,662,1198,1994,1364,1663,1053,1498,1302,70,1977,1110,231,187,1912,1925,542,434,1272,1795,1274,1363,1159,130,1028,1215,853,1845,1980,1653,518,1668,1893,620,955,1611,16,911,374,1656,1265,1874,1438,95,172,66,1329,756,506,1320,584,1825,1401,706,703,1587,502,30,1246,1347,1901,938,1198,381,66,89,1245,1379,1901,554,1911,609,1396,711,1424,1387,115,378,709,508,1312,1770,1478,1754,217,1902,998,1572,701,944,807,1534,1339,399,606,91,1651,340,1541,747,1414,398,1151,496,1770,1668,1853,650,852,1528,1445,1597,1842,1793,846,1891,1075,1004,1760,171,1008,1682,436,1781,1707,1117,1577,1118,275,1667,1774,1806,4,566,1469,1372,1537,1950,452,207,1943,243,1982,507,1212,1435,401,1475,566,1112,159,218,1259,363,1993,1724,946,559,834,543,1163,1058,1473,128,354,981,1726,1051,641,214,1666,357,1469,485,686,341,1191,1006,993,1625,337,1714,1371,1986,646,1755,859,969,656,1492,750,537,1233,1966,1990,1753,1971,1227,18,1764,986,1232,1006,1340,1251,1533,1897,640,1580,954,1741,543,905,1022,686,740,1642,941,1804,180,390,6,569,1461,1173,1860,891,1632,1682,1350,659,1444,403,1268,1798,674,1882,1672,861,813,74,388,1809,612,1426,727,1648,354,1464,1113,1752,1707,280,1681,905,1670,1728,1221,767,1662,162,1481,1037,1780,1021,1579,1769,1903,1213,1971,1127,1855,1240,1852,1711,540], [1043,420,832,943,1010,1236,1773,1279,1916,262,361,1071,81,1580,1093,1216,1392,1621,1571,1628,628,1179,39,890,1490,1246,329,859,1652,942,887,1663,261,518,1428,1925,1086,537,1794,1254,1158,1729,436,206,82,1243,1247,554,1075,1938,1567,737,819,160,702,256,1886,1863,1471,924,1117,709,1335,1655,1125,169,851,470,477,1900,682,183,1348,383,1630,661,1241,1691,414,1535,475,693,76,422,789,221,1450,163,771,763,1083,797,413,304,586,184,560,1404,1044,848,599,675,688,1197,240,1200,1387,1614,1920,1703,1429,183,1763,440,1904,1950,1052,1066,1450,805,511,216,896,235,906,2000,1701,521,1199,1932,594,1368,1423,486,1056,1223,1788,1633,128,1846,190,1088,1006,526,143,290,1694,1309,848,945,1252,394,1100,582,1010,1739,1533,1312,1021,1224,1847,470,86,1009,265,220,1401,1923,120,469,1718,1167,1375,54,239,518,830,710,1239,120,968,1543,832,1442,1367,639,759,1407,664,942,1499,1112,1701,1944,346,1937,65,1880,1892,628,1457,151,149,957,691,1885,1794,442,304,809,1009,1443,656,400,424,506,77,1914,227,688,74,1368,1599,801,1579,1755,1304,1567,964,1855,19,1309,44,797,108,892,105,1980,896,1863,764,9,1619,1952,1159,1089,1120,7,803,182,1520,737,784,1357,315,742,289,514,746,1717,989,438,1039,392,1629,179,1038,1206,303,920,1629,1841,504,582,1623,950,1644,1479,872,640,417,727,1468,319,509,115,997,224,596,140,1957,1390,1362,69,1579,1855,487,1158,837,1998,470,612,1961,1631,1133,8,1576,738,425,633,1259,632,956,1614,1581,126,374,1778,175,1200,1906,1992,1280,1858,1819,911,673,397,919,559,1792,1389,1395,465,851,1094,1283,1151,640,485,1895,484,174,1316,1439,1723,1863,1777,464,1794,1320,1720,382,1346,848,212,771,498,239,489,769,977,1318,1452,361,1541,1791,1274,1614,1599,15,768,179,1209,1957,1025,367,19,985,274,1127,240,107,1298,1253,505,45,1167,1821,1526,604,1022,1439,137,234,1012,1915,402,1258,494,854,650,988,1212,68,1525,670,318,1555,190,1164,1616,28,482,899,827,937,590,1595,991,806,1893,633,771,1609,1922,1208,831,1452,122,1640,1156,586,997,870,362,351,1844,1900,541,1170,427,1824,202,1615,1368,1850,1108,390,1384,1454,295,1936,1561,1173,1906,995,318,361,413,1138,1607,1149,1459,91,1619,1317,1423,471,756,1862,1906,1814,1415,137,671,1026,538,933,490,781,726,17,1847,1529,1043,288,471,606,1076,1086,1240,1371,1213,1283,360,293,1456,1990,828]),
                       ([1764,388,212,1598,545,477,280,226,1022,131,343,1803,240,1374,322,103,1716,291,544,611,241,913,472,945,657,952,447,1936,1261,1790,608,794,211,1186,1637,1109,979,13,147,575,329,1638,686,492,592,1004,1323,205,662,1892,594,1612,1908,348,1804,1595,1246,286,641,977,1184,1355,296,397,33,336,1319,630,1098,316,825,1915,461,114,1253,646,462,1275,744,1771,1550,1425,1814,41,1390,659,390,1744,1676,637,1111,414,916,1036,1105,148,1591,1165,1597,234,1926,154,1927,412,1831,621,1322,1854,1911,421,1196,335,1624,328,179,840,228,500,276,707,600,1367,1602,1328,847,1491,739,1285,1205,239,1807,1608,1943,476,173,1560,1507,1599,1049,865,713,1859,1114,1869,674,1911,1870,1758,1857,1128,842,78,1777,466,1716,1439,833,959,1727,343,1784,78,648,283,602,1867,151,253,963,993,648,1396,803,1337,698,1810,987,1756,1183,48,138,777,469,109,1538,450,1299,594,1540,1824,1129,1424,677,369,1181,1530,1394,710,322,1690,248,826,924,949,1976,1166,688,1121,431,1300,787,1503,1350,119,108,825,1886,222,851,440,610,9,626,1007,817,94,1213,2,130,1327,1912,585,719,433,1319,9,644,569,1758,180,998,1488,63,1794,1087,511,85,1064,1891,1198,262,67,975,866,113,373,51,633,596,1726,976,1746,1174,1490,1893,366,526,1581,1663,1099,288,630,242,740,1960,74,1260,1826,400,1925,70,513,315,658,895,729,672,794,1707,333,1109,731,1298,478,1753,1196,560,629,1447,1948,1293,569,682,688,155,1000,1975,982,619,1116,538,1242,377,758,226,952,286,1799,468,1198,1115,123,1255,835,1775,1052,867,1888,61,1181,1175,536,270,1299,1046,1519,1124,358,588,1498,370,1761,498,324,1618,1461,1416,1835,1599,853,1210,1066,148,1951,1566,1135,1813,1578,1269,212,1790,1073,241,1918,1191,1653,77,449,239,182,197,1393,455,1481,1376,1510,1963,1977,209,1903,72,1192,1025,692,1811,1155,1237,854,1552,827,845,986,653,614,1522,1859,348,632,1467,1523,389,761,1103,1768,188,623,1000,1044,217,742,242,1890,1446,55,57,1457,960,59,1230,1462,1576,734,1170,282,720,967,1666,1063,1584,726,1825,1748,772,1578,247,1706,1360,768,1660,808,1396,1576,1852,194,1412,684,1534,1279,235,574,252,1232,1055,759,1412,769,874,673,1166,590,465,1109,1810,468,681,1749,1417,995,427,435,459,661,447,1017,648,1401,1762,668,407,21,1018,1078,1585,249,1226,320,1657,583,1533,1058,1893,572,1620,1035,202,570,485,513,854,523], [54,1965,627,66,1766,241,1467,1637,924,1773,486,1508,1989,1065,1964,1341,1093,1461,562,1208,158,910,1975,1919,1784,63,197,869,834,538,710,1023,1729,109,1155,1619,464,1019,1038,270,1423,1223,784,569,364,1703,1088,1056,850,434,540,373,511,125,1783,1681,235,1751,1817,1928,1713,297,300,647,1271,1319,1560,898,1452,645,1748,1975,1104,985,672,1132,1638,782,1814,493,1460,115,1902,634,263,1706,679,1689,1911,149,448,770,660,1115,1461,790,61,1154,1556,1586,1735,1236,74,1440,720,1432,1735,35,1125,1583,1454,1150,1672,423,914,601,34,326,1916,636,82,652,1410,479,1122,657,1776,1155,617,1447,262,1349,1625,208,1561,867,1818,1424,1933,17,555,1529,1503,1354,894,1682,919,267,38,253,1854,1126,322,1767,641,1044,447,1197,1675,1207,1593,766,566,1386,671,1439,712,770,1419,1817,1658,783,318,763,1623,5,473,1721,511,458,595,233,845,615,338,1845,88,1248,383,223,1854,1938,187,616,742,896,1622,1695,208,1426,1634,124,332,1854,92,1108,551,805,249,528,1003,501,1185,304,419,971,330,536,1058,1445,1047,1724,189,1783,1250,1497,222,612,685,1080,808,1436,1921,237,1634,53,95,107,175,1764,543,641,1208,733,1051,1077,1981,552,854,320,1348,1212,1549,532,297,339,532,787,418,301,710,757,488,187,8,555,1473,1114,482,2000,601,649,606,1951,260,1381,1120,1580,1868,1902,133,1216,1510,568,1400,802,618,1636,1014,17,1518,372,1045,810,1560,926,1613,257,1467,1083,1865,1060,39,1248,1136,69,953,1404,328,1635,770,301,891,655,1044,187,1037,1065,937,246,766,1862,958,1837,1211,549,969,1206,1078,960,917,1562,1834,1497,850,1857,1528,452,1108,497,555,536,358,1697,657,457,771,1490,641,963,8,16,1764,356,826,515,1499,563,364,879,1367,355,1597,1478,384,61,664,1055,548,1074,1155,1821,1304,1140,1146,313,1141,666,222,465,1540,1336,523,843,798,1258,1898,995,628,161,1839,1574,992,1792,474,1882,515,1783,539,726,1061,946,1215,106,1915,606,170,585,1159,1892,1073,324,511,580,465,568,1870,291,1793,1805,163,1937,1408,1223,799,126,1872,723,177,1901,168,142,1058,886,433,1254,408,1786,1878,953,392,1671,1417,1739,1359,1212,401,1920,1075,743,513,1576,293,857,582,596,1081,56,658,691,1041,1791,962,801,1605,506,1589,1214,1785,1042,74,677,1223,1739,1614,60,1160,1284,493,1286,393,840,801,1204,1578,336,1428,770,1839,27,1200,1887,1826,490,1811,1537,1182,399,467,1623]),
                    ]:
    print(f'nums1, nums2 = {nums1}, {nums2}')
    sol = Solution()
    r = sol.maxUncrossedLines(nums1, nums2)
    print(f'r = {r}')
    print('===========================')


