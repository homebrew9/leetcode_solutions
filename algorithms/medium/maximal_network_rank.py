from typing import List
from collections import defaultdict

class Solution:
    def maximalNetworkRank(self, n: int, roads: List[List[int]]) -> int:
        hsh = defaultdict(int)
        arr = [0 for _ in range(n)]
        for x, y in roads:
            arr[x] += 1
            arr[y] += 1
            hsh[(x, y)] = 1
            hsh[(y, x)] = 1
        res = 0
        for i in range(n):
            for j in range(i+1, n):
                if (i, j) in hsh:
                    res = max(res, arr[i]+arr[j]-1)
                else:
                    res = max(res, arr[i]+arr[j])
        return res

# Main section
for n, roads in [
                   (4, [[0,1],[0,3],[1,2],[1,3]]),
                   (5, [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]),
                   (8, [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]),
                   (100, [[26,30],[98,55],[23,98],[40,59],[35,72],[35,17],[7,10],[35,90],[95,22],[47,18],[5,67],[97,49],[67,45],[26,7],[35,74],[41,90],[6,13],[15,80],[88,31],[47,57],[68,43],[65,1],[0,64],[38,2],[39,3],[25,20],[92,67],[21,43],[52,76],[33,17],[64,4],[88,90],[88,35],[57,29],[64,77],[40,31],[92,14],[2,56],[84,49],[38,61],[36,27],[11,43],[6,95],[13,64],[81,70],[62,66],[74,40],[94,52],[83,52],[32,61],[76,12],[28,27],[85,33],[0,38],[15,20],[84,74],[2,99],[95,19],[88,62],[48,62],[1,84],[71,82],[51,42],[2,92],[83,56],[78,23],[89,23],[50,16],[27,78],[11,24],[23,16],[50,0],[29,96],[73,29],[82,41],[75,20],[68,14],[66,81],[68,78],[45,58],[78,0],[86,68],[21,12],[89,9],[24,47],[18,49],[48,50],[4,44],[7,88],[72,34],[28,65],[70,25],[20,91],[29,39],[65,77],[63,59]]),
                ]:
    print(f'n, roads = {n}, {roads}')
    sol = Solution()
    r = sol.maximalNetworkRank(n, roads)
    print(f'r = {r}')
    print('====================')

