from typing import List
# 
# Brute force to generate all subsets - from the editorial!
# Approach # 2 - Better brute force. Stop whenever zeros/ones exceed m/n.
#
class Solution:
    def findMaxForm(self, strs: List[str], m: int, n: int) -> int:
        def count_zeros_ones(s):
            c = [0,0]
            for ch in s:
                c[int(ch)] += 1
            return c
        N = len(strs)
        maxlen = 0
        for i in range(0, 1<<N):
            #print(f'i = {i}')
            zeros, ones, size = 0, 0, 0
            for j in range(0, N):
                #print(f'\ti, j, 1<<j, (i&(1<<j)) = {i}, {j}, {1<<j}, {i&(1<<j)}')
                if i & (1<<j) != 0:
                    count = count_zeros_ones(strs[j])
                    zeros += count[0]
                    ones += count[1]
                    if zeros > m or ones > n:
                        break
                    size += 1
            if zeros <= m and ones <= n:
                maxlen = max(maxlen, size)
        return maxlen


# Main section
for strs, m, n in [
                     (['10','0001','111001','1','0'], 5, 3),
                     (['10','0001','111001','1','0'], 5, 3),
                     (['10','0','1'], 1, 1),
                     (['01100100100101','001000110','000010001011','00010','100110010000101','0','1111010','1100110111','0000001011011101','011101110010100000'], 15, 15),
                     (['0001100011111','010','111101111011000','110','111010000010111','00010000010101001111','10110001000011001011','011010','000000100101000','10111111100001010101','00','0110010001','10110110101000110','1011101000','11','00111000100','010','1101011100100','10100000001111','101110'], 15, 15),
                     (['10100000101110111000','01','100','10111110100011010111','10110100','1100','00100011000110100111','111000100111','1110010001','011','1101011','10110','01000010111010001','10011100001','000','011100000010001010','111110101110000110','01001011','0','01001110','11100100','11','001101111011001000','0001001010111001100','11110001001001','0001111100110','110101110001011','00111','101100111001010','000000111011000000','100','01000000111010010100','101100010000010','11001101001101101','010011110110','0110111011100','100000100100110110','1011000011101','00001','1111','1110001110111','0111','01111100000','1010101101','1101110111100010110','111011110110','00000','1110011000110001101','01111000111000','1'], 15, 15),
                  ]:
    print(f'strs = {strs}')
    sol = Solution()
    r = sol.findMaxForm(strs, m, n)
    print(f'r = {r}')
    print('================')



