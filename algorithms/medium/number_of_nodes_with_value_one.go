package main

import "fmt"

func numberOfNodes(n int, queries []int) int {
    freq := make(map[int]int)
    for _, q := range queries {
        freq[q]++
    }
    res := 0
    for i := 1; i <= n; i++ {
        tmp := 0
        for k := i; k > 0; k /= 2 {
            v, ok := freq[k]
            if ok {
                tmp += v
            }
        }
        if tmp % 2 == 1 {
            res++
        }
    }
    return res
}

func main() {
    type Pair struct {
        n int
        queries []int 
    }
    for _, v := range []Pair{Pair{5, []int{1,2,5}},
                             Pair{3, []int{2,3,3}},
                             Pair{13, []int{2,3,3,5,7,13}},
                             Pair{150, []int{61,57,80,78,87,51,28,53,88,77,70,88,27,53,8,78,80,83,85,55,41,51,22,49,44,64,97,79,75,16,72,89,3,71,14,54,32,93,78,80,58,35,27,58,90,87,40,8,1,42,66,75,52,94,56,91,47,25,90,35,97,69,89,30,99,91,7,57,93,97,11,8,80,70,68,49,18,86,27,83,5,43,2,1,33,46,34,7,5,4,24,48,17,14,16,33,38,20,67,53,22,62,99,60,25,25,16,17,61,1,36,100,29,37,9,18,87,61,79,53,51,25,46,75,43,34,87,32,48,7,9,83,90,56,54,51,33,59,75,35,11,88,99,76,93,5,51,7,82,72,29,28,65,92,22,19,83,26,59,6,80,45,7,17,36,82,55,23,79,8,59,11,8,18,28,17,54,9,94,48,73,46,48,38,89,13,99,34,11,86,84,5,42,52,33,49,45,70,43,50}},
                            }{
        fmt.Printf("n = %d ; queries = %v\n", v.n, v.queries)
        r := numberOfNodes(v.n, v.queries)
        fmt.Printf("r = %d\n", r)
        fmt.Println("===================")
    }
}


