from typing import List

class Solution:
    def largestDivisibleSubset(self, nums: List[int]) -> List[int]:
        # Neetcode IO - very good explanation!
        nums.sort()
        cache = dict()  # (i, prev) -> []
        # ex = [1, 2, 5, 15, 45]
        def dfs(i, prev):
            if i == len(nums):
                return []
            if (i, prev) in cache:
                return cache[(i, prev)]
            res = dfs(i + 1, prev)  # skip nums[i]
            if nums[i] % prev == 0:
                tmp = [nums[i]] + dfs(i + 1, nums[i])  # include nums[i]
                #res = tmp if len(tmp) > len(res) else res # Very important step
                res = tmp
            cache[(i, prev)] = res
            return res
        val = dfs(0, 1)
        return val

# Main section
for nums in [
               [1,2,3],
               [1,2,4,8],
               [1],
               [5,9,18,54,108,540,90,180,360,720],
               [3,4,16,8],
               #[422,201,121,77,376,743,605,727,685,347,753,3,298,32,784,722,610,664,128,71,933,647,414,427,504,562,534,696,532,132,118,84,604,194,811,346,150,538,382,496,642,384,146,673,520,219,425,481,234,553,551,166,317,944,55,230,477,750,113,608,196,563,765,7,908,914,896,290,762,537,259,209,544,985,24,710,927,876,440,595,819,494,824,296,936,255,814,483,818,578,489,843,736,366,272,391,214,832,286,690,817,310,400,705,236,627,144,830,445,989,5,92,584,940,699,397,868,326,263,168,350,662,124,974,404,689,805,379,973,998,130,678,233,756,173,552,162,418,996,97,709,694,493,913,170,856,446,517,164,419,853,576,961,583,548,958,712,577,543,102,308,615,78,69,711,786,114,203,268,26,724,716,882,412,514,928,932,22,780,859,982,362,759,291,335,185,788,316,402,570,385,112,355,850,666,975,389,42,757,153,555,858,80,839,879,211,697,212,572,455,503,348,142,687,942,929,531,609,683,100,345,794,807,195,460,133,70,848,174,178,352,729,35,431,919,266,641,829,564,915,556,252,165,877,861,671,510,407,482,828,681,815,33,895,392,813,9,808,837,371,634,467,241,541,13,844,890,547,918,912,56,324,393,49,152,73,216,508,457,110,251,275,611,79,54,448,801,319,424,911,327,436,754,383,677,301,300,708,976,332,479,972,986,213,433,589,836,707,199,67,668,852,632,684,561,336,248,43,187,931,799,665,39,122,591,439,261,141,373,139,771,793,806,622,637,64,106,500,299,495,772,450,774,889,587,945,311,405,715,688,91,649,191,358,254,881,46,618,875,465,797,59,123,184,154,61,98,723,854,177,768,204,620,394,329,539,1000,965,232,127,789,277,744,560,826,85,331,145,546,429,867,752,395,871,147,14,638,343,176,892,659,785,730,751,506,518,617,590,966,948,86,863,728,304,614,698,758,1,249,416,825,872,776,841,365,802,126,515,105,354,217,63,104,742,398,294,773,726,691,949,466,935,182,550,983,27,87,117,240,809,498,747,134,602,409,227,351,245,630,686,163,179,205,89,68,334,565,519,468,279,220,72,566,342,778,120,749,497,116,156,575,977,491,847,125,155,228,549,720,922,131,970,41,897,360,740,143,559,476,443,884,573,680,542,864,401,682,411,930,783,667,629,190,525,636,359,83,111,171,725,997,267,574,926,88,663,449,226,502,280,943,733,469,368,866,215,322,140,374,803,651,904,158,408,606,598,387,135,796,586,207,262,289,619,435,338,822,812,903,846,777,993,855,954,51,276,485,292,76,244,761,845,607,994,487,599,639,287,53,592,260,874,337,426,501,886,910,792,256,307,612,218,58,490,129,388,613,470,810,652,90,367,297,596,109,356,764,781,453,953,206,938,906,370,149,849,20,679,594,151,999,969,964,898,567,746,692,581,47,838,557,28,264,646,198,623,10],
            ]:
    print(f'nums = {nums}')
    sol = Solution()
    r = sol.largestDivisibleSubset(nums)
    print(f'r = {r}')
    print('========================')

