from typing import List

class Solution:
    def maxLength(self, ribbons: List[int], k: int) -> int:
        left, right = 1, max(ribbons) + 1
        while left <= right:
            mid = (left + right) // 2
            val = sum([x//mid for x in ribbons])
            #print(f'\tleft, right, mid, val = {left}, {right}, {mid}, {val}')
            if val >= k:
                left = mid + 1
            else:
                right = mid - 1
        return right

# Main section
for ribbons, k in [
                     ([9,7,5], 3),
                     ([7,5,9], 4),
                     ([5,7,9], 22),
                     ([7,9,4,2,1,10,10,4,5,10], 3),
                     ([7,9,4,2,1,10,10,4,5,10], 7),
                     ([639,451,12,615,975,919,820,790,950,384,96,511,669,117,895,668,255,602,203,748,661,585,904,784,298,512,880,12,903,85,813,237,778,838,18,175,941,331,596,53,645,19,30,829,869,345,656,625,351,517,823,180,745,127,807,216,55,737,648,31,988,537,914,203,860,652,422,412,474,630,771,157,604,416,752,39,374,570,658,289,252,82,234,774,571,820,437,351,480,443,901,891,731,752,896,23,108,422,499,627], 137),
                     ([2307,4079,8730,1418,7165,1906,3060,3862,7038,7311,8296,5954,8026,8082,1225,6066,14,3696,5763,2592,6035,5144,188,7734,5880,3314,5205,5053,1499,3656,7303,5043,3689,3622,5559,7466,7121,9162,5020,5971,607,6993,325,9104,5396,1415,3459,7617,9008,464,6069,852,7290,1101,7093,8555,8054,1823,2709,6372,8855,7,4179,2206,4274,7331,2858,9809,2160,7528,8777,37,7344,23,9106,8713,9982,3403,3948,4417,784,6455,3185,4529,506,9855,4044,953,8172,5197,7775,7460,8563,4631,5249,4894,7569,8556,8289,5563,7316,9925,6038,9329,3181,3878,9039,5125,3747,4062,1667,1323,7457,8175,4462,8078,7712,1293,6104,5576,4652,9572,3375,1534,2161,9870,828,9675,4522,9756,8168,4801,434,901,5887,7425,3132,6900,7836,9780,2942,8985,394,6240,4904,5369,1611,7408,4548,7749,9846,3638,9062,635,3748,2648,408,2862,6350,268,1943,7455,1968,7000,4804,4593,2132,7200,7478,6700,4532,8307,1132,7338,6067,6066,7687,2036,2437,9731,915,9047,4775,1955,4631,3219,5600,8111,5674,7604,4136,4301,5208,9973,2581,83,6640,2747,2586,1629,8210,4828,2562,9502,6797,2069,8026,4281,3483,2658,8152,6696,7290,4697,5646,3288,6080,9365,8188,8190,7541,8472,8159,5739,1558,7311,7419,3855,4572,9987,1235,3789,2357,753,6613,5949,6171,6709,8880,5947,8504,4458,5043,6592,8527,3019,9806,6571,3816,4034,4539,6636,4555,6108,1312,3252,2556,4225,8027,4834,8310,2079,5729,2413,5976,5360,6980,6353,2082,730,9369,3535,2360,4264,6900,76,2332,3144,2877,8144,2777,6553,5495,3034,207,9865,7232,39,9954,1813,9992,6119,705,9436,5628,150,5145,2030,1638,7985,7489,2867,9267,3705,6561,9160,9513,474,4153,8100,3705,5795,7879,2163,190,3997,5323,3927,3629,4404,5090,234,593,262,2128,8420,4840,6952,325,8878,3844,579,1101,8146,1744,2081,4224,4270,5693,9856,1801,685,9721,5890,9297,7737,3110,6363,5746,8268,8652,7432,2033,6970,1978,6346,9919,7496,4975,9602,8130,5559,7670,938,8342,2696,3104,5891,2345,4351,9154,4282,7689,8081,7824,3079,602,4270,4771,4613,89,2226,6720,8414,5235,2366,5691,6602,7132,1465,6619,1562,8579,8369,3990,3857,6765,2085,6545,7413,8127,5994,9330,6568,9428,7585,672,6377,4229,7957,9214,3920,8431,5258,4047,3253,4947,8218,8759,1183,2645,8999,3378,137,3742,2131,4637,6765,4429,3250,2450,3894,6554,1494,9157,9709,2855,6435,1746,5893,2455,6342,7009,4531,7320,7173,1445,8317,7753,5159,3713,3495,4535,6846,7140,9669,2697,6236,8618,216,1802,7224,4586,3536,7353,8025,2454,1070,1221,4361,4352,7743,900,1046,4198,7366,8038,7911,3084,2746,416,8273,5143,5519,6708,7981,2072,5626,3254,1267,1461,730,3021,3,1404,8604,2081,1477,2884,7546,4404,5474,8913,4955,2202,455,1470,511,2251,1214,7594,4759,5962,8113,1900,5272,7859,7714,7719,8234,6926,6870,5312,5328,5660,3015,881,6719,820,8839,9902,2336,753,695,6644,8998,6971,683,8131,3264,1134,8678,1127,4560,1079,5211,410,8609,1484,4887,5545,2020,1465,5199,6810,8454,5197,1259,7772,9393,3562,2681,754,1622,9000,2586,489,5548,8380,9171,2347,9464,3457,3533,1874,7534,5023,6693,6962,4522,6099,1059,6055,9535,6084,177,6448,4733,4521,5391,6816,2724,812,2445,222,723,8389,1657,2617,2479,5808,5426,9017,7338,3607,6546,2502,9823,855,2304,8950,5944,4812,9950,8660,6499,5515,632,7158,3308,3082,6460,8804,8585,4810,5783,6209,7989,2754,6642,6704,6276,6307,4971,6384,4577,9699,5587,1954,3514,6508,8699,336,2866,300,449,8783,4555,870,3964,1186,3250,6533,9381,7402,3120,8203,1923,265,6977,8750,1329,4213,9721,8722,1980,8759,5508,8404,37,7614,2487,9416,7653,5089,1132,6579,2676,45,9934,7494,4760,7688,6790,1118,1635,8868,8250,4108,8382,7251,2281,6078,1986,8531,9501,261,5465,81,9784,788,4978,8990,9377,7924,4430,9459,1819,2198,6103,3203,7395,8440,1406,1902,5124,9967,9691,6049,9001,3136,3534,933,9679,3816,3683,7100,7599,9636,5090,3275,9958,3404,3610,9836,9436,7458,9869,4745,5887,1407,990,229,7680,4681,3821,4604,5577,1400,8975,8790,5270,918,1107,3176,8659,5616,4385,8809,4817,8405,5383,8390,2966,6857,439,2371,9311,7029,9299,2978,3467,5344,7688,3600,2815,7938,1665,3923,3905,718,7442,9518,2336,926,1048,9110,4459,485,249,1001,1343,824,6100,9292,1975,7200,4497,1011,7183,4414,8997,4275,3260,942,5563,9930,2020,7046,3440,5521,2253,4616,6209,3518,4565,2027,681,6217,2662,8576,7753,9006,9373,7801,568,6083,9865,2545,2975,7908,9097,3817,3128,1356,1989,761,5802,6333,7927,9819,5457,7748,9652,6818,8508,1813,2236,6834,6589,1249,5101,8819,2422,5893,9636,6476,5651,8918,8033,6254,8930,5484,7604,7823,377,8809,9743,4305,251,9561,6888,5391,5477,7045,6334,5272,2240,3657,9018,9162,3686,3293,8514,1410,4144,8397,5994,2909,1664,7481,792,8933,2563,5748,2659,6222,1544,5558,8232,5382,5769,9442,3786,9239,7095,4414,2473,2332,852,3720,8397,3877,4054,5444,7108,3851,940,9457,4940,4849,3974,5521,5959,572,7051,7755,9175,4504,1225,4790,9700,8776,8318,5240,1323,2833,5177,5422,9402,3585,1681,8347,149,2587,8443,5024,511,1767,7694,5386,8350,9239,5614,9051,9812,3292,7217,9877,621,3901,3103,3174,3666,1543,2665,841,6765,3838,8219,9678,1150,7191,2318,6228,1458,3126,4719,398,1037,9943,363,8913,6788,1206,1703,3763,6441,3786,1499,6927,2713,8045,7505,4528,8389,3977,7291,5843,4422], 3597),
                  ]:
    print(f'ribbons, k = {ribbons}, {k}')
    sol = Solution()
    r = sol.maxLength(ribbons, k)
    print(f'r = {r}')
    print('==================')


